package com.cit.robot;

import java.io.InputStream;
import java.io.OutputStream;
import java.util.ArrayList;
import java.util.Enumeration;
import java.util.List;

import javax.swing.JOptionPane;


import gnu.io.CommPortIdentifier;
import gnu.io.SerialPort;
import gnu.io.SerialPortEvent;
import gnu.io.SerialPortEventListener;



public class Selfserial implements  SerialPortEventListener{

	private String portname;
	
	private String rate;
	
	private String data;
	
	private String stop;
	
	private String parity;
	
	protected CommPortIdentifier portId;
	
	protected Enumeration<?> ports;
	
	protected List<String> portList;
	
	protected SerialPort serialPort;
	
	protected OutputStream outputStream = null;
	
	protected InputStream inputStream = null;
	
	protected String mesg;
	
	protected int sendCount, reciveCount;
	
	protected boolean isEmptyOfPort;
	
	@Override
	public void serialEvent(SerialPortEvent arg0) {
		// TODO Auto-generated method stub
		
	}
	
	public void setisEmptyOfPort(boolean bb)
	{
		isEmptyOfPort=bb;
	}
	
	public boolean getisEmptyOfPort()
	{
		return isEmptyOfPort;
	}
	
    

	
    public void scanPorts() {  
        portList = new ArrayList<String>();  
        Enumeration<?> en = CommPortIdentifier.getPortIdentifiers();  
        CommPortIdentifier portId;  
        while(en.hasMoreElements()){  
            portId = (CommPortIdentifier) en.nextElement();  
            if(portId.getPortType() == CommPortIdentifier.PORT_SERIAL){  
                String name = portId.getName();  
                if(!portList.contains(name)) {  
                    portList.add(name);  
                }  
            }  
        }  
        if(null == portList   
                || portList.isEmpty()) {  
            //showErrMesgbox("未找到可用的串行端口号,程序无法启动!");
        	setisEmptyOfPort(false);
            System.exit(0);  
        }  
    }  

}
